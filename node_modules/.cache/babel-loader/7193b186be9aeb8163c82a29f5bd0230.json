{"ast":null,"code":"// // ProcessedData.js\n// import jsonData from './dataset.json'; // Adjust the path to your JSON file\n// import randomColor from 'randomcolor';\n\n// const processData = () => {\n//   const uniqueProducts = new Set(jsonData.map(item => item.product));\n//   const colorMap = {};\n\n//   uniqueProducts.forEach(product => {\n//     colorMap[product] = randomColor();\n//   });\n\n//   return jsonData.map(item => ({\n//     ...item,\n//     color: colorMap[item.product]\n//   }));\n// };\n\n// export default processData;\n\n// ProcessedData.js\nimport randomColor from 'randomcolor';\nconst fetchData = async () => {\n  try {\n    const response = await fetch('/dataset.json');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const jsonData = await response.json();\n    const uniqueProducts = new Set(jsonData.map(item => item.product));\n    const colorMap = {};\n    uniqueProducts.forEach(product => {\n      colorMap[product] = randomColor();\n    });\n    return jsonData.map(item => ({\n      ...item,\n      color: colorMap[item.product]\n    }));\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\nexport default fetchData;","map":{"version":3,"names":["randomColor","fetchData","response","fetch","ok","Error","jsonData","json","uniqueProducts","Set","map","item","product","colorMap","forEach","color","error","console"],"sources":["/Users/sreekavyakashamshetty/Downloads/my-app/src/Data.js"],"sourcesContent":["\n\n// // ProcessedData.js\n// import jsonData from './dataset.json'; // Adjust the path to your JSON file\n// import randomColor from 'randomcolor';\n\n// const processData = () => {\n//   const uniqueProducts = new Set(jsonData.map(item => item.product));\n//   const colorMap = {};\n\n//   uniqueProducts.forEach(product => {\n//     colorMap[product] = randomColor();\n//   });\n\n//   return jsonData.map(item => ({\n//     ...item,\n//     color: colorMap[item.product]\n//   }));\n// };\n\n// export default processData;\n\n// ProcessedData.js\nimport randomColor from 'randomcolor';\n\nconst fetchData = async () => {\n  try {\n    const response = await fetch('/dataset.json');\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    const jsonData = await response.json();\n\n    const uniqueProducts = new Set(jsonData.map(item => item.product));\n    const colorMap = {};\n\n    uniqueProducts.forEach(product => {\n      colorMap[product] = randomColor();\n    });\n\n    return jsonData.map(item => ({\n      ...item,\n      color: colorMap[item.product]\n    }));\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return [];\n  }\n};\n\nexport default fetchData;\n"],"mappings":"AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,WAAW,MAAM,aAAa;AAErC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;IAC7C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IACA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAEtC,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAACH,QAAQ,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,OAAO,CAAC,CAAC;IAClE,MAAMC,QAAQ,GAAG,CAAC,CAAC;IAEnBL,cAAc,CAACM,OAAO,CAACF,OAAO,IAAI;MAChCC,QAAQ,CAACD,OAAO,CAAC,GAAGZ,WAAW,CAAC,CAAC;IACnC,CAAC,CAAC;IAEF,OAAOM,QAAQ,CAACI,GAAG,CAACC,IAAI,KAAK;MAC3B,GAAGA,IAAI;MACPI,KAAK,EAAEF,QAAQ,CAACF,IAAI,CAACC,OAAO;IAC9B,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE;EACX;AACF,CAAC;AAED,eAAef,SAAS"},"metadata":{},"sourceType":"module"}