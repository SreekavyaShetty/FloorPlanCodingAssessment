{"ast":null,"code":"import processData from './Data';\nconst data = processData();\nconst rearrangeData = data => {\n  // Count the occurrences of each product\n  const productCounts = data.reduce((acc, item) => {\n    acc[item.product] = (acc[item.product] || 0) + 1;\n    return acc;\n  }, {});\n\n  // Sort products by their count (ascending)\n  const sortedProducts = Object.entries(productCounts).sort((a, b) => a[1] - b[1]);\n\n  // Create a queue for each product\n  const productQueues = sortedProducts.reduce((acc, [product]) => {\n    acc[product] = data.filter(item => item.product === product);\n    return acc;\n  }, {});\n  let rearranged = [];\n  let lastProduct = null;\n  while (rearranged.length < data.length) {\n    for (const [product, queue] of Object.entries(productQueues)) {\n      if (queue.length > 0 && product !== lastProduct) {\n        rearranged.push(queue.shift());\n        lastProduct = product;\n        break;\n      }\n    }\n  }\n  return rearranged;\n};\n\n//   export default rearrangeData;\n\nexport const xdata = rearrangeData(data);","map":{"version":3,"names":["processData","data","rearrangeData","productCounts","reduce","acc","item","product","sortedProducts","Object","entries","sort","a","b","productQueues","filter","rearranged","lastProduct","length","queue","push","shift","xdata"],"sources":["/Users/sreekavyakashamshetty/Downloads/my-app/src/Arrange.js"],"sourcesContent":["import processData from './Data';\n\nconst data = processData();\nconst rearrangeData = (data) => {\n    // Count the occurrences of each product\n    const productCounts = data.reduce((acc, item) => {\n      acc[item.product] = (acc[item.product] || 0) + 1;\n      return acc;\n    }, {});\n  \n    // Sort products by their count (ascending)\n    const sortedProducts = Object.entries(productCounts).sort((a, b) => a[1] - b[1]);\n  \n    // Create a queue for each product\n    const productQueues = sortedProducts.reduce((acc, [product]) => {\n      acc[product] = data.filter(item => item.product === product);\n      return acc;\n    }, {});\n  \n    let rearranged = [];\n    let lastProduct = null;\n  \n    while (rearranged.length < data.length) {\n      for (const [product, queue] of Object.entries(productQueues)) {\n        if (queue.length > 0 && product !== lastProduct) {\n          rearranged.push(queue.shift());\n          lastProduct = product;\n          break;\n        }\n      }\n    }\n  \n    return rearranged;\n  };\n  \n//   export default rearrangeData;\n  \n  \n  export const xdata = rearrangeData(data);"],"mappings":"AAAA,OAAOA,WAAW,MAAM,QAAQ;AAEhC,MAAMC,IAAI,GAAGD,WAAW,CAAC,CAAC;AAC1B,MAAME,aAAa,GAAID,IAAI,IAAK;EAC5B;EACA,MAAME,aAAa,GAAGF,IAAI,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAC/CD,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IAChD,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMG,cAAc,GAAGC,MAAM,CAACC,OAAO,CAACP,aAAa,CAAC,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC,CAAC,CAAC,GAAGC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEhF;EACA,MAAMC,aAAa,GAAGN,cAAc,CAACJ,MAAM,CAAC,CAACC,GAAG,EAAE,CAACE,OAAO,CAAC,KAAK;IAC9DF,GAAG,CAACE,OAAO,CAAC,GAAGN,IAAI,CAACc,MAAM,CAACT,IAAI,IAAIA,IAAI,CAACC,OAAO,KAAKA,OAAO,CAAC;IAC5D,OAAOF,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,IAAIW,UAAU,GAAG,EAAE;EACnB,IAAIC,WAAW,GAAG,IAAI;EAEtB,OAAOD,UAAU,CAACE,MAAM,GAAGjB,IAAI,CAACiB,MAAM,EAAE;IACtC,KAAK,MAAM,CAACX,OAAO,EAAEY,KAAK,CAAC,IAAIV,MAAM,CAACC,OAAO,CAACI,aAAa,CAAC,EAAE;MAC5D,IAAIK,KAAK,CAACD,MAAM,GAAG,CAAC,IAAIX,OAAO,KAAKU,WAAW,EAAE;QAC/CD,UAAU,CAACI,IAAI,CAACD,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;QAC9BJ,WAAW,GAAGV,OAAO;QACrB;MACF;IACF;EACF;EAEA,OAAOS,UAAU;AACnB,CAAC;;AAEH;;AAGE,OAAO,MAAMM,KAAK,GAAGpB,aAAa,CAACD,IAAI,CAAC"},"metadata":{},"sourceType":"module"}