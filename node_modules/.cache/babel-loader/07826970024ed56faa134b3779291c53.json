{"ast":null,"code":"var _jsxFileName = \"/Users/sreekavyakashamshetty/Downloads/my-app/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Button } from '@mui/material';\nimport { xdata } from './Arrange';\nimport randomColor from 'randomcolor';\nconst VerticalText = ({\n  children\n}) => /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body1\",\n  align: \"center\",\n  sx: {\n    writingMode: 'vertical-lr',\n    // Vertical text, facing right\n    whiteSpace: 'nowrap',\n    // Avoid wrapping\n    fontSize: '0.5rem'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, children);\nconst VerticalColumn = ({\n  children\n}) => /*#__PURE__*/React.createElement(TableCell, {\n  align: \"center\",\n  sx: {\n    padding: '0',\n    height: '0',\n    borderLeft: 1,\n    borderTop: 1,\n    borderRight: 1,\n    border: 1\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(VerticalText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}, children));\nconst CustomTableCell = props => /*#__PURE__*/React.createElement(TableCell, Object.assign({\n  align: \"center\"\n}, props, {\n  sx: {\n    padding: '0',\n    height: '0',\n    border: 1,\n    fontSize: '0.6rem'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}));\nconst CustomNewTableCell = ({\n  onClick,\n  children,\n  isActive,\n  color\n}) => /*#__PURE__*/React.createElement(TableCell, {\n  align: \"center\",\n  onClick: onClick,\n  sx: {\n    border: 1,\n    padding: '0',\n    height: '0',\n    fontSize: '0.6rem',\n    backgroundColor: isActive ? color : null // Color change on active state\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}, children);\nconst CustomProdTableCell = ({\n  children,\n  color,\n  ...props\n}) => /*#__PURE__*/React.createElement(TableCell, Object.assign({\n  align: \"center\"\n}, props, {\n  sx: {\n    padding: '0',\n    height: '0',\n    borderLeft: 1,\n    borderTop: 1,\n    borderRight: 1,\n    fontSize: '0.6rem',\n    fontWeight: 'bold',\n    border: 1,\n    width: '300px',\n    backgroundColor: color || 'inherit' // Use productData.color as background color\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}), children);\nconst App = () => {\n  // Create an array for rows\n\n  const initialRows = new Array(40).fill(null).map((_, index) => ({\n    id: index,\n    grid: index < 20 ? '1' : '3',\n    diode: false,\n    // diodeActive: false,\n    // unmaskActive: false,\n    // unmask: index % 2 === 0 ? 'Unmask' : '',\n    unmask: false,\n    ru: `${index}`,\n    //seatUuid: `UUID-${index + 1}`,\n    prod: '',\n    place: '',\n    prod2: '',\n    ru2: `${index + 40}`,\n    unmask2: false,\n    diode2: false,\n    grid2: index + 40 < 60 ? '2' : '4'\n  }));\n  const [rows, setRows] = useState(initialRows);\n  const data = React.useMemo(() => xdata, []);\n  console.log(data[0]);\n\n  //   useEffect(() => {\n  //     // Assuming data is an array of product objects, and each product object has at least a 'product' key\n  //     const updatedRows = rows.map((row, index) => {\n  //       const productData = data[index % data.length]; // This will cycle through the products for each row\n  //       return {\n  //         ...row,\n  //         prod: productData.product, // Assign product name to 'prod' (Product1) column\n  //         prod2: productData.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n  //         prodColor: productData.color\n  //       };\n  //     });\n  //     setRows(updatedRows);\n  // }, []);\n\n  useEffect(() => {\n    // Assuming data is an array of product objects, and each product object has at least a 'product' key\n    const updatedRows = rows.map((row, index) => {\n      const productData = data[index % data.length];\n      const productData2 = data[(index + 40) % data.length]; // This will cycle through the products for each row\n      return {\n        ...row,\n        prod: productData.product,\n        // Assign product name to 'prod' (Product1) column\n        prod2: productData2.product,\n        // Assign product name to 'prod2' (Product2) column for rows 21-40\n        prodColor: productData.color,\n        prodColor2: productData2.color\n      };\n    });\n    setRows(updatedRows);\n  }, []);\n  const toggleDiode = ru => {\n    setRows(rows.map(row => ({\n      ...row,\n      diode: row.ru === ru ? !row.diode : false,\n      diode2: false\n    })));\n  };\n\n  // const toggleUnmask = (ru) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask: row.ru === ru ? !row.unmask: false, // Only turn on the clicked one, reset others\n  //     unmask2: false \n  //   })));\n  // };\n\n  const toggleDiode2 = ru2 => {\n    setRows(rows.map(row => ({\n      ...row,\n      diode2: row.ru2 === ru2 ? !row.diode2 : false,\n      diode: false\n    })));\n  };\n\n  // const toggleUnmask2 = (ru2) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask2: row.ru2 === ru2 ? !row.unmask2 : false, // Only turn on the clicked one, reset others\n  //     unmask: false\n  //   })));\n  // };\n\n  const [activeUnmaskProduct, setActiveUnmaskProduct] = useState(null);\n  const toggleUnmask = product => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n\n  // Modify the toggleUnmask2 function for the 'unmask2' column\n  const toggleUnmask2 = product => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    style: {\n      padding: 14,\n      marginLeft: '286px',\n      width: `678px`,\n      borderLeft: '1px solid black',\n      borderTop: '1px solid black',\n      borderRight: '1px solid black',\n      borderBottom: '0',\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, \"TAPE-IN DB VIEW\"), /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"custom table\",\n    align: \"center\",\n    sx: {\n      width: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    sx: {\n      backgroundColor: 'lightblue'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"Grid\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, \"Diode\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Unmask\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, \"RU#\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, \"Place\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"RU#\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, \"Unmask\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, \"Diode\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, \"Grid\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, rows.map((row, index) => /*#__PURE__*/React.createElement(React.Fragment, null, index === 20 && /*#__PURE__*/React.createElement(TableRow, {\n    key: \"midhalf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomTableCell, {\n    colSpan: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, \"MIDHALF\")), /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, (index === 0 || index === 20) && /*#__PURE__*/React.createElement(CustomTableCell, {\n    rowSpan: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, row.grid), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: row.diode,\n    onClick: () => toggleDiode(row.ru),\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: activeUnmaskProduct === row.prod,\n    onClick: () => toggleUnmask(row.prod),\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, row.ru), /*#__PURE__*/React.createElement(CustomProdTableCell, {\n    color: row.prodColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }, row.prod), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: row.diode,\n    onClick: () => toggleDiode(row.ru),\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomProdTableCell, {\n    color: row.prodColor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, row.prod2), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, row.ru2), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: activeUnmaskProduct === row.prod2,\n    onClick: () => toggleUnmask2(row.prod2),\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: row.diode2,\n    onClick: () => toggleDiode2(row.ru2),\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }), (index === 0 || index === 20) && /*#__PURE__*/React.createElement(CustomTableCell, {\n    rowSpan: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 19\n    }\n  }, row.grid2))))))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '30px',\n      // Adjust the width as needed\n      height: '600px',\n      // Same height as the table\n      position: 'absolute',\n      right: '220px',\n      top: '95px',\n      textAlign: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      border: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"I/Os\")), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '640px',\n      // Same width as the table\n      height: '0',\n      // Adjust the height as needed\n      padding: '0',\n      textAlign: 'center',\n      marginLeft: '326px',\n      borderLeft: '1px solid black',\n      borderRight: '1px solid black',\n      borderBottom: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, \"MISC Block\")));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Button","xdata","randomColor","VerticalText","children","createElement","variant","align","sx","writingMode","whiteSpace","fontSize","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","VerticalColumn","padding","height","borderLeft","borderTop","borderRight","border","CustomTableCell","props","Object","assign","CustomNewTableCell","onClick","isActive","color","backgroundColor","CustomProdTableCell","fontWeight","width","App","initialRows","Array","fill","map","_","index","id","grid","diode","unmask","ru","prod","place","prod2","ru2","unmask2","diode2","grid2","rows","setRows","data","useMemo","console","log","updatedRows","row","productData","length","productData2","product","prodColor","prodColor2","toggleDiode","toggleDiode2","activeUnmaskProduct","setActiveUnmaskProduct","toggleUnmask","toggleUnmask2","component","style","marginLeft","borderBottom","Fragment","key","colSpan","rowSpan","position","right","top","textAlign","display","flexDirection","justifyContent"],"sources":["/Users/sreekavyakashamshetty/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Button } from '@mui/material';\nimport { xdata} from './Arrange';\nimport randomColor from 'randomcolor';\n\nconst VerticalText = ({ children }) => (\n  <Typography\n    variant=\"body1\"\n    align=\"center\"\n    sx={{\n      writingMode: 'vertical-lr', // Vertical text, facing right\n      whiteSpace: 'nowrap', // Avoid wrapping\n      fontSize: '0.5rem',\n    }}\n  >\n    {children}\n  </Typography>\n);\n\nconst VerticalColumn = ({ children }) => (\n  <TableCell align=\"center\" sx={{ padding: '0',height: '0',borderLeft: 1, borderTop: 1, borderRight: 1, border:1,}}>\n    <VerticalText>{children}</VerticalText>\n\n  </TableCell>\n);\n\nconst CustomTableCell = (props) => (\n  <TableCell align=\"center\" {...props} sx={{ padding: '0',height: '0', border:1,fontSize: '0.6rem', }}/>\n  \n);\n\nconst CustomNewTableCell = ({ onClick, children, isActive, color }) => (\n  <TableCell \n    align=\"center\" \n    onClick={onClick} \n    sx={{ \n      border: 1, \n      padding: '0',\n      height: '0',\n      fontSize: '0.6rem',\n      backgroundColor: isActive ? color : null,  // Color change on active state\n    }}\n  >\n    {children}\n  </TableCell>\n);\n\nconst CustomProdTableCell = ({ children, color, ...props }) => (\n  <TableCell\n    align=\"center\"\n    {...props}\n    sx={{\n      padding: '0',\n      height: '0',\n      borderLeft: 1,\n      borderTop: 1,\n      borderRight: 1,\n      fontSize: '0.6rem',\n      fontWeight: 'bold',\n      border: 1,\n      width: '300px',\n      backgroundColor: color || 'inherit', // Use productData.color as background color\n    }}\n  >\n    {children}\n  </TableCell>\n);\n\n\n\n\n\n\n\nconst App = () => {\n  // Create an array for rows\n  \n\n  \n  const initialRows = new Array(40).fill(null).map((_, index) => ({\n    id: index,\n    grid: index < 20 ? '1' : '3',\n    diode: false,\n    // diodeActive: false,\n    // unmaskActive: false,\n    // unmask: index % 2 === 0 ? 'Unmask' : '',\n    unmask: false,\n    ru: `${index}`,\n    //seatUuid: `UUID-${index + 1}`,\n    prod: '',\n    place: '',\n    prod2: '',\n    ru2: `${index + 40}`,\n    unmask2: false,\n    diode2: false,\n    grid2: (index+40) < 60  ? '2' : '4',\n  }));\n\n  const [rows, setRows] = useState(initialRows);\n\n  const data = React.useMemo(()=> xdata, []); \n\n  console.log(data[0]);\n\n//   useEffect(() => {\n//     // Assuming data is an array of product objects, and each product object has at least a 'product' key\n//     const updatedRows = rows.map((row, index) => {\n//       const productData = data[index % data.length]; // This will cycle through the products for each row\n//       return {\n//         ...row,\n//         prod: productData.product, // Assign product name to 'prod' (Product1) column\n//         prod2: productData.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n//         prodColor: productData.color\n//       };\n//     });\n//     setRows(updatedRows);\n// }, []);\n  \n  useEffect(() => {\n    // Assuming data is an array of product objects, and each product object has at least a 'product' key\n    const updatedRows = rows.map((row, index) => {\n      const productData = data[index % data.length]; \n      const productData2 = data[(index+40) % data.length]; // This will cycle through the products for each row\n      return {\n        ...row,\n        prod: productData.product, // Assign product name to 'prod' (Product1) column\n        prod2: productData2.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n        prodColor: productData.color,\n        prodColor2: productData2.color\n      };\n    });\n    setRows(updatedRows);\n}, []);\n\n  const toggleDiode = (ru) => {\n    setRows(rows.map(row => ({\n      ...row, \n      diode: row.ru === ru ? !row.diode : false, \n      diode2: false\n    })));\n  };\n\n  // const toggleUnmask = (ru) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask: row.ru === ru ? !row.unmask: false, // Only turn on the clicked one, reset others\n  //     unmask2: false \n  //   })));\n  // };\n\n  const toggleDiode2 = (ru2) => {\n    setRows(rows.map(row => ({\n      ...row, \n      diode2: row.ru2 === ru2 ? !row.diode2 : false,  \n      diode: false\n    })));\n  };\n\n  // const toggleUnmask2 = (ru2) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask2: row.ru2 === ru2 ? !row.unmask2 : false, // Only turn on the clicked one, reset others\n  //     unmask: false\n  //   })));\n  // };\n\n  const [activeUnmaskProduct, setActiveUnmaskProduct] = useState(null);\n\n  const toggleUnmask = (product) => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n  \n  // Modify the toggleUnmask2 function for the 'unmask2' column\n  const toggleUnmask2 = (product) => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n  \n\n\n\n\n  return (\n    <Box>\n    <TableContainer component={Paper}>\n      <Typography variant=\"h6\" align=\"center\" style={{ padding: 14,  marginLeft: '286px', width: `678px`, borderLeft: '1px solid black', borderTop: '1px solid black', borderRight: '1px solid black', borderBottom: '0', backgroundColor: 'lightblue',}}>\n        TAPE-IN DB VIEW\n      </Typography>\n      <Table aria-label=\"custom table\" align = \"center\" sx={{ width: 'auto' }}> \n        <TableHead sx={{ backgroundColor: 'lightblue' }}>\n        \n          <TableRow>\n            <VerticalColumn>Grid</VerticalColumn>\n            <VerticalColumn>Diode</VerticalColumn>\n            <VerticalColumn>Unmask</VerticalColumn>\n            <VerticalColumn>RU#</VerticalColumn>\n            {/* <CustomTableCell colSpan={3} align=\"center\">Seat UUID</CustomTableCell> */}\n            <CustomTableCell></CustomTableCell>\n            <CustomTableCell>Place</CustomTableCell>\n  <CustomTableCell></CustomTableCell>\n            \n            <VerticalColumn>RU#</VerticalColumn>\n            <VerticalColumn>Unmask</VerticalColumn>\n            <VerticalColumn>Diode</VerticalColumn>\n            <VerticalColumn>Grid</VerticalColumn>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <>\n\n              {index === 20 && (\n                <TableRow key=\"midhalf\">\n                  <CustomTableCell colSpan={11}>MIDHALF</CustomTableCell>\n                </TableRow>\n              )}\n              <TableRow key={row.id}>\n                {(index === 0 || index === 20) && (\n                  <CustomTableCell rowSpan={20}>{row.grid}</CustomTableCell>\n                )}\n                \n                <CustomNewTableCell isActive={row.diode}\n                  onClick={() => toggleDiode(row.ru)} color=\"blue\"\n                >  </CustomNewTableCell>\n                {/*<CustomNewTableCell isActive={row.unmask}\n                  onClick={() => toggleUnmask(row.ru)}\n                >  </CustomNewTableCell> */}\n                <CustomNewTableCell isActive={activeUnmaskProduct === row.prod}\n                onClick={() => toggleUnmask(row.prod)} color=\"yellow\"\n                >  </CustomNewTableCell>\n                <CustomTableCell>{row.ru}</CustomTableCell>\n                {/* Duplicate the cells to simulate the layout in the image */}\n                <CustomProdTableCell color={row.prodColor}>{row.prod}</CustomProdTableCell>\n                {/* <CustomTableCell>{row.place}</CustomTableCell> */}\n                <CustomNewTableCell isActive={row.diode}\n                  onClick={() => toggleDiode(row.ru)} color=\"blue\"\n                >  </CustomNewTableCell>\n                <CustomProdTableCell color={row.prodColor2}>{row.prod2}</CustomProdTableCell>\n                \n                <CustomTableCell>{row.ru2}</CustomTableCell>\n                {/*<CustomNewTableCell isActive={row.unmask2}\n                  onClick={() => toggleUnmask2(row.ru2)}></CustomNewTableCell> */}\n                  <CustomNewTableCell isActive={activeUnmaskProduct === row.prod2}\n                onClick={() => toggleUnmask2(row.prod2)} color=\"yellow\"\n                >  </CustomNewTableCell>\n                <CustomNewTableCell isActive={row.diode2}\n                  onClick={() => toggleDiode2(row.ru2)} color=\"blue\"></CustomNewTableCell>\n                {(index === 0 || index === 20) && (\n                  <CustomTableCell rowSpan={20}>{row.grid2}</CustomTableCell>\n                )}\n               \n                \n              </TableRow>\n            </>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <Box\n        sx={{\n          \n          width: '30px', // Adjust the width as needed\n          height: '600px', // Same height as the table\n          position: 'absolute',\n          right: '220px',\n          top: '95px',\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          border: 1,\n        }}\n      >\n        <Typography variant=\"h8\">I/Os</Typography>\n      </Box>\n\n      {/* Box attached to the bottom of the table */}\n      <Box\n        sx={{\n          \n          width: '640px', // Same width as the table\n          height: '0', // Adjust the height as needed\n          padding: '0',\n          textAlign: 'center',\n          marginLeft: '326px',\n          borderLeft: '1px solid black',\n          borderRight: '1px solid black',\n          borderBottom: '1px solid black', \n          \n        }}\n      >\n        <Typography variant=\"h8\">MISC Block</Typography>\n      </Box>\n    </Box>\n    \n    \n    \n  );\n};\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}