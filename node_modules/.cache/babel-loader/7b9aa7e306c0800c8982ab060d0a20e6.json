{"ast":null,"code":"import jsonData from './dataset.json';\n\n// to assign some random color to each product\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\n// Adding rcolor as key to all items inthe existing json data\nconst newData = jsonData.map(item => ({\n  ...item,\n  rcolor: getRandomColor()\n}));\n\n//   console.log(newData);\n//   export const xdata = newData\n\nconst processData = () => {\n  const processedData = [];\n  newData.forEach(item => {\n    const repeatTimes = item.repeat || 1;\n    for (let i = 0; i < repeatTimes; i++) {\n      processedData.push({\n        ...item\n      });\n    }\n  });\n  return processedData;\n};\n\n//  console.log(processData());\n\nexport default processData;\n\n// export const rdata = processData();","map":{"version":3,"names":["jsonData","getRandomColor","letters","color","i","Math","floor","random","newData","map","item","rcolor","processData","processedData","forEach","repeatTimes","repeat","push"],"sources":["/Users/sreekavyakashamshetty/Downloads/my-app/src/Data.js"],"sourcesContent":["import jsonData from './dataset.json';\n\n\n// to assign some random color to each product\nconst getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  \n  // Adding rcolor as key to all items inthe existing json data\n  const newData = jsonData.map((item) => ({\n    ...item,\n    rcolor: getRandomColor(),\n  }));\n  \n//   console.log(newData);\n//   export const xdata = newData\n\n  const processData = () => {\n    const processedData = [];\n  \n    newData.forEach(item => {\n      const repeatTimes = item.repeat || 1;\n      for (let i = 0; i < repeatTimes; i++) {\n        processedData.push({ ...item }); \n      }\n    });\n    return processedData;\n  };\n  \n  //  console.log(processData());\n\nexport default processData;\n\n// export const rdata = processData();\n  \n\n  "],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;;AAGrC;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAMC,OAAO,GAAG,kBAAkB;EAClC,IAAIC,KAAK,GAAG,GAAG;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1BD,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;EAClD;EACA,OAAOJ,KAAK;AACd,CAAC;;AAED;AACA,MAAMK,OAAO,GAAGR,QAAQ,CAACS,GAAG,CAAEC,IAAI,KAAM;EACtC,GAAGA,IAAI;EACPC,MAAM,EAAEV,cAAc,CAAC;AACzB,CAAC,CAAC,CAAC;;AAEL;AACA;;AAEE,MAAMW,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,aAAa,GAAG,EAAE;EAExBL,OAAO,CAACM,OAAO,CAACJ,IAAI,IAAI;IACtB,MAAMK,WAAW,GAAGL,IAAI,CAACM,MAAM,IAAI,CAAC;IACpC,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,WAAW,EAAEX,CAAC,EAAE,EAAE;MACpCS,aAAa,CAACI,IAAI,CAAC;QAAE,GAAGP;MAAK,CAAC,CAAC;IACjC;EACF,CAAC,CAAC;EACF,OAAOG,aAAa;AACtB,CAAC;;AAED;;AAEF,eAAeD,WAAW;;AAE1B"},"metadata":{},"sourceType":"module"}