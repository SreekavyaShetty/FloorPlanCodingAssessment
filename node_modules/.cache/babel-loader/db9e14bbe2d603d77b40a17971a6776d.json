{"ast":null,"code":"var _jsxFileName = \"/Users/sreekavyakashamshetty/Downloads/my-app/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Button } from '@mui/material';\nimport { xdata } from './Arrange';\nconst VerticalText = ({\n  children\n}) => /*#__PURE__*/React.createElement(Typography, {\n  variant: \"body1\",\n  align: \"center\",\n  sx: {\n    writingMode: 'vertical-lr',\n    // Vertical text, facing right\n    whiteSpace: 'nowrap',\n    // Avoid wrapping\n    fontSize: '0.5rem',\n    fontWeight: 'bold'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }\n}, children);\nconst VerticalColumn = ({\n  children\n}) => /*#__PURE__*/React.createElement(TableCell, {\n  align: \"center\",\n  sx: {\n    padding: '0',\n    height: '0',\n    borderLeft: 1,\n    borderTop: 1,\n    borderRight: 1,\n    border: 1,\n    color: 'white',\n    borderColor: 'black',\n    fontWeight: 'bold'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(VerticalText, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, children));\nconst CustomTableCell = props => /*#__PURE__*/React.createElement(TableCell, Object.assign({\n  align: \"center\"\n}, props, {\n  sx: {\n    padding: '0',\n    height: '0',\n    fontSize: '10px',\n    border: 1,\n    fontSize: '0.6rem',\n    borderColor: 'black',\n    fontWeight: 'bold'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}));\nconst CustomNewTableCell = ({\n  onClick,\n  children,\n  isActive,\n  color\n}) => /*#__PURE__*/React.createElement(TableCell, {\n  align: \"center\",\n  onClick: onClick,\n  sx: {\n    border: 1,\n    padding: '0',\n    height: '0',\n    fontSize: '0.6rem',\n    backgroundColor: isActive ? color : null // Color change on active state\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, children);\nconst CustomProdTableCell = ({\n  children,\n  color,\n  ...props\n}) => /*#__PURE__*/React.createElement(TableCell, Object.assign({\n  align: \"center\"\n}, props, {\n  sx: {\n    padding: '0',\n    height: '0',\n    borderLeft: 1,\n    borderTop: 1,\n    borderRight: 1,\n    fontSize: '0.6rem',\n    fontWeight: 'bold',\n    border: 1,\n    width: '300px',\n    backgroundColor: color || 'inherit' // Use productData.color as background color\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }\n}), children);\nfunction isDarkColor(hexColor) {\n  const r = parseInt(hexColor.slice(1, 3), 16);\n  const g = parseInt(hexColor.slice(3, 5), 16);\n  const b = parseInt(hexColor.slice(5, 7), 16);\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n  return brightness < 128;\n}\nconst App = () => {\n  // Create an array for rows\n\n  const initialRows = new Array(40).fill(null).map((_, index) => ({\n    id: index,\n    grid: index < 20 ? '1' : '3',\n    diode: false,\n    // diodeActive: false,\n    // unmaskActive: false,\n    // unmask: index % 2 === 0 ? 'Unmask' : '',\n    unmask: false,\n    ru: `${index}`,\n    //seatUuid: `UUID-${index + 1}`,\n    prod: '',\n    place: '',\n    prod2: '',\n    ru2: `${index + 40}`,\n    unmask2: false,\n    diode2: false,\n    grid2: index + 40 < 60 ? '2' : '4'\n  }));\n  const [rows, setRows] = useState(initialRows);\n  const data = React.useMemo(() => xdata, []);\n  console.log(data[0]);\n\n  //   useEffect(() => {\n  //     // Assuming data is an array of product objects, and each product object has at least a 'product' key\n  //     const updatedRows = rows.map((row, index) => {\n  //       const productData = data[index % data.length]; // This will cycle through the products for each row\n  //       return {\n  //         ...row,\n  //         prod: productData.product, // Assign product name to 'prod' (Product1) column\n  //         prod2: productData.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n  //         prodColor: productData.color\n  //       };\n  //     });\n  //     setRows(updatedRows);\n  // }, []);\n\n  useEffect(() => {\n    // Assuming data is an array of product objects, and each product object has at least a 'product' key\n    const updatedRows = rows.map((row, index) => {\n      const productData = data[index % data.length];\n      const productData2 = data[(index + 40) % data.length]; // This will cycle through the products for each row\n      return {\n        ...row,\n        prod: productData.product,\n        // Assign product name to 'prod' (Product1) column\n        prod2: productData2.product,\n        // Assign product name to 'prod2' (Product2) column for rows 21-40\n        prodColor: productData.color,\n        prodColor2: productData2.color\n      };\n    });\n    setRows(updatedRows);\n  }, []);\n  const toggleDiode = ru => {\n    setRows(rows.map(row => ({\n      ...row,\n      diode: row.ru === ru ? !row.diode : false,\n      diode2: false\n    })));\n  };\n\n  // const toggleUnmask = (ru) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask: row.ru === ru ? !row.unmask: false, // Only turn on the clicked one, reset others\n  //     unmask2: false \n  //   })));\n  // };\n\n  const toggleDiode2 = ru2 => {\n    setRows(rows.map(row => ({\n      ...row,\n      diode2: row.ru2 === ru2 ? !row.diode2 : false,\n      diode: false\n    })));\n  };\n\n  // const toggleUnmask2 = (ru2) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask2: row.ru2 === ru2 ? !row.unmask2 : false, // Only turn on the clicked one, reset others\n  //     unmask: false\n  //   })));\n  // };\n\n  const [activeUnmaskProduct, setActiveUnmaskProduct] = useState(null);\n  const toggleUnmask = product => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n\n  // Modify the toggleUnmask2 function for the 'unmask2' column\n  const toggleUnmask2 = product => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n\n  // const getGridColor = (gridValue) => {\n  //   switch (gridValue) {\n  //     case '1': return 'blue'; // Replace '#color1' with the actual color you want\n  //     case '2': return 'red';\n  //     case '3': return 'yellow';\n  //     case '4': return 'green';\n  //     default: return 'inherit'; // Default color if none of the cases match\n  //   }\n  // };\n\n  const getGridStyle = gridValue => {\n    switch (gridValue) {\n      case '1':\n        return {\n          backgroundColor: 'black',\n          color: 'white'\n        };\n      case '2':\n        return {\n          backgroundColor: '#4d9900',\n          color: 'white'\n        };\n      case '3':\n        return {\n          backgroundColor: '#336600',\n          color: 'white'\n        };\n      case '4':\n        return {\n          backgroundColor: '#1aa3ff',\n          color: 'black'\n        };\n      default:\n        return {\n          backgroundColor: 'inherit',\n          color: 'inherit'\n        };\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      marginLeft: '279.5px',\n      marginTop: '10px',\n      height: '20px',\n      width: `719px`,\n      fontSize: '10px',\n      borderLeft: '1px solid black',\n      color: 'white',\n      borderColor: 'black',\n      borderTop: '1px solid black',\n      borderRight: '1px solid black',\n      borderBottom: '0',\n      fontWeight: 'bold',\n      backgroundColor: '#006699'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, \"TAPE-IN DB VIEW\"), /*#__PURE__*/React.createElement(Table, {\n    \"aria-label\": \"custom table\",\n    align: \"center\",\n    sx: {\n      width: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    sx: {\n      backgroundColor: '#006699',\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, \"Grid\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, \"Diode\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, \"Unmask\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"RU#\"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    colSpan: 3,\n    align: \"center\",\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, \"Seat UUID\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, \"RU#\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, \"Unmask\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, \"Diode\"), /*#__PURE__*/React.createElement(VerticalColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Grid\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, rows.map((row, index) => /*#__PURE__*/React.createElement(React.Fragment, null, index === 20 && /*#__PURE__*/React.createElement(TableRow, {\n    key: \"midhalf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomTableCell, {\n    colSpan: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, \"MIDHALF\")), /*#__PURE__*/React.createElement(TableRow, {\n    key: row.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, (index === 0 || index === 20) && /*#__PURE__*/React.createElement(CustomTableCell, {\n    rowSpan: 20,\n    style: getGridStyle(row.grid),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 19\n    }\n  }, row.grid), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: row.diode,\n    onClick: () => toggleDiode(row.ru),\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: activeUnmaskProduct === row.prod,\n    onClick: () => toggleUnmask(row.prod),\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, row.ru), /*#__PURE__*/React.createElement(CustomProdTableCell, {\n    color: row.prodColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, row.prod), /*#__PURE__*/React.createElement(CustomTableCell, {\n    style: {\n      width: '13px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, row.place, \" \"), /*#__PURE__*/React.createElement(CustomProdTableCell, {\n    color: row.prodColor2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, row.prod2), /*#__PURE__*/React.createElement(CustomTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, row.ru2), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: activeUnmaskProduct === row.prod2,\n    onClick: () => toggleUnmask2(row.prod2),\n    color: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 19\n    }\n  }, \"  \"), /*#__PURE__*/React.createElement(CustomNewTableCell, {\n    isActive: row.diode2,\n    onClick: () => toggleDiode2(row.ru2),\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), (index === 0 || index === 20) && /*#__PURE__*/React.createElement(CustomTableCell, {\n    rowSpan: 20,\n    style: getGridStyle(row.grid2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 19\n    }\n  }, row.grid2))))))), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '30px',\n      // Adjust the width as needed\n      height: '602px',\n      // Same height as the table\n      position: 'absolute',\n      right: '220px',\n      top: '65px',\n      textAlign: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      border: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, \"I/Os\")), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      width: '628px',\n      // Same width as the table\n      height: '0',\n      // Adjust the height as needed\n      padding: '0',\n      textAlign: 'center',\n      marginLeft: '332px',\n      borderLeft: '1px solid black',\n      borderRight: '1px solid black',\n      borderBottom: '1px solid black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, \"MISC Block\")));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Button","xdata","VerticalText","children","createElement","variant","align","sx","writingMode","whiteSpace","fontSize","fontWeight","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","VerticalColumn","padding","height","borderLeft","borderTop","borderRight","border","color","borderColor","CustomTableCell","props","Object","assign","CustomNewTableCell","onClick","isActive","backgroundColor","CustomProdTableCell","width","isDarkColor","hexColor","r","parseInt","slice","g","b","brightness","App","initialRows","Array","fill","map","_","index","id","grid","diode","unmask","ru","prod","place","prod2","ru2","unmask2","diode2","grid2","rows","setRows","data","useMemo","console","log","updatedRows","row","productData","length","productData2","product","prodColor","prodColor2","toggleDiode","toggleDiode2","activeUnmaskProduct","setActiveUnmaskProduct","toggleUnmask","toggleUnmask2","getGridStyle","gridValue","component","style","display","alignItems","justifyContent","marginLeft","marginTop","borderBottom","colSpan","Fragment","key","rowSpan","position","right","top","textAlign","flexDirection"],"sources":["/Users/sreekavyakashamshetty/Downloads/my-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef }  from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, Button } from '@mui/material';\nimport { xdata} from './Arrange';\n\nconst VerticalText = ({ children }) => (\n  <Typography\n    variant=\"body1\"\n    align=\"center\"\n    sx={{\n      writingMode: 'vertical-lr', // Vertical text, facing right\n      whiteSpace: 'nowrap', // Avoid wrapping\n      fontSize: '0.5rem',\n      fontWeight: 'bold',\n      \n    }}\n  >\n    {children}\n  </Typography>\n);\n\nconst VerticalColumn = ({ children }) => (\n  <TableCell align=\"center\" sx={{ padding: '0',height: '0',borderLeft: 1, borderTop: 1, borderRight: 1, border:1, color: 'white', borderColor: 'black', fontWeight: 'bold'}}>\n    <VerticalText>{children}</VerticalText>\n\n  </TableCell>\n);\n\nconst CustomTableCell = (props) => (\n  <TableCell align=\"center\" {...props} sx={{ padding: '0',height: '0', fontSize: '10px', border:1,fontSize: '0.6rem', borderColor: 'black', fontWeight: 'bold'}}/>\n  \n);\n\nconst CustomNewTableCell = ({ onClick, children, isActive, color }) => (\n  <TableCell \n    align=\"center\" \n    onClick={onClick} \n    sx={{ \n      border: 1, \n      padding: '0',\n      height: '0',\n      fontSize: '0.6rem',\n      backgroundColor: isActive ? color : null,  // Color change on active state\n    }}\n  >\n    {children}\n  </TableCell>\n);\n\nconst CustomProdTableCell = ({ children, color, ...props }) => (\n  \n  \n  <TableCell\n    align=\"center\"\n    {...props}\n    sx={{\n      padding: '0',\n      height: '0',\n      borderLeft: 1,\n      borderTop: 1,\n      borderRight: 1,\n      fontSize: '0.6rem',\n      fontWeight: 'bold',\n      border: 1,\n      width: '300px',\n      backgroundColor: color || 'inherit', // Use productData.color as background color\n      \n    }}\n   \n  >\n    {children}\n  </TableCell>\n);\n\n\nfunction isDarkColor(hexColor) {\n  const r = parseInt(hexColor.slice(1, 3), 16);\n  const g = parseInt(hexColor.slice(3, 5), 16);\n  const b = parseInt(hexColor.slice(5, 7), 16);\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n  return brightness < 128;\n}\n\n\n\n\n\n\nconst App = () => {\n  // Create an array for rows\n  \n\n  \n  const initialRows = new Array(40).fill(null).map((_, index) => ({\n    id: index,\n    grid: index < 20 ? '1' : '3',\n    diode: false,\n    // diodeActive: false,\n    // unmaskActive: false,\n    // unmask: index % 2 === 0 ? 'Unmask' : '',\n    unmask: false,\n    ru: `${index}`,\n    //seatUuid: `UUID-${index + 1}`,\n    prod: '',\n    place: '',\n    prod2: '',\n    ru2: `${index + 40}`,\n    unmask2: false,\n    diode2: false,\n    grid2: (index+40) < 60  ? '2' : '4',\n  }));\n\n  const [rows, setRows] = useState(initialRows);\n\n  const data = React.useMemo(()=> xdata, []); \n\n  console.log(data[0]);\n\n//   useEffect(() => {\n//     // Assuming data is an array of product objects, and each product object has at least a 'product' key\n//     const updatedRows = rows.map((row, index) => {\n//       const productData = data[index % data.length]; // This will cycle through the products for each row\n//       return {\n//         ...row,\n//         prod: productData.product, // Assign product name to 'prod' (Product1) column\n//         prod2: productData.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n//         prodColor: productData.color\n//       };\n//     });\n//     setRows(updatedRows);\n// }, []);\n  \n  useEffect(() => {\n    // Assuming data is an array of product objects, and each product object has at least a 'product' key\n    const updatedRows = rows.map((row, index) => {\n      const productData = data[index % data.length]; \n      const productData2 = data[(index+40) % data.length]; // This will cycle through the products for each row\n      return {\n        ...row,\n        prod: productData.product, // Assign product name to 'prod' (Product1) column\n        prod2: productData2.product, // Assign product name to 'prod2' (Product2) column for rows 21-40\n        prodColor: productData.color,\n        prodColor2: productData2.color\n      };\n    });\n    setRows(updatedRows);\n}, []);\n\n  const toggleDiode = (ru) => {\n    setRows(rows.map(row => ({\n      ...row, \n      diode: row.ru === ru ? !row.diode : false, \n      diode2: false\n    })));\n  };\n\n  // const toggleUnmask = (ru) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask: row.ru === ru ? !row.unmask: false, // Only turn on the clicked one, reset others\n  //     unmask2: false \n  //   })));\n  // };\n\n  const toggleDiode2 = (ru2) => {\n    setRows(rows.map(row => ({\n      ...row, \n      diode2: row.ru2 === ru2 ? !row.diode2 : false,  \n      diode: false\n    })));\n  };\n\n  // const toggleUnmask2 = (ru2) => {\n  //   setRows(rows.map(row => ({\n  //     ...row, \n  //     unmask2: row.ru2 === ru2 ? !row.unmask2 : false, // Only turn on the clicked one, reset others\n  //     unmask: false\n  //   })));\n  // };\n\n  const [activeUnmaskProduct, setActiveUnmaskProduct] = useState(null);\n\n  const toggleUnmask = (product) => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n  \n  // Modify the toggleUnmask2 function for the 'unmask2' column\n  const toggleUnmask2 = (product) => {\n    setActiveUnmaskProduct(activeUnmaskProduct === product ? null : product);\n  };\n  \n\n  // const getGridColor = (gridValue) => {\n  //   switch (gridValue) {\n  //     case '1': return 'blue'; // Replace '#color1' with the actual color you want\n  //     case '2': return 'red';\n  //     case '3': return 'yellow';\n  //     case '4': return 'green';\n  //     default: return 'inherit'; // Default color if none of the cases match\n  //   }\n  // };\n\n  const getGridStyle = (gridValue) => {\n    switch (gridValue) {\n      case '1': return { backgroundColor: 'black', color: 'white' };\n      case '2': return { backgroundColor: '#4d9900', color: 'white' };\n      case '3': return { backgroundColor: '#336600', color: 'white' };\n      case '4': return { backgroundColor: '#1aa3ff', color: 'black' };\n      default: return { backgroundColor: 'inherit', color: 'inherit' };\n    }\n  };\n\n  return (\n    <Box>\n    <TableContainer component={Paper}>\n      <Typography variant=\"h6\" align=\"center\" style={{ display: 'flex', alignItems: 'center', \n    justifyContent: 'center', marginLeft: '279.5px', marginTop:'10px',height: '20px',width: `719px`, fontSize: '10px', borderLeft: '1px solid black', color: 'white',borderColor: 'black',borderTop: '1px solid black', borderRight: '1px solid black', borderBottom: '0', fontWeight: 'bold',backgroundColor: '#006699',}}>\n        TAPE-IN DB VIEW\n      </Typography>\n      <Table aria-label=\"custom table\" align = \"center\" sx={{ width: 'auto' }}> \n        <TableHead sx={{ backgroundColor: '#006699', color: 'white' }}>\n        \n          <TableRow>\n            <VerticalColumn >Grid</VerticalColumn>\n            <VerticalColumn>Diode</VerticalColumn>\n            <VerticalColumn>Unmask</VerticalColumn>\n            <VerticalColumn>RU#</VerticalColumn>\n            <CustomTableCell colSpan={3} align=\"center\" style={{ color: 'white' }}>Seat UUID</CustomTableCell>\n            {/* <CustomTableCell></CustomTableCell>\n            <CustomTableCell>Place</CustomTableCell>\n  <CustomTableCell></CustomTableCell> */}\n            \n            <VerticalColumn >RU#</VerticalColumn>\n            <VerticalColumn>Unmask</VerticalColumn>\n            <VerticalColumn>Diode</VerticalColumn>\n            <VerticalColumn>Grid</VerticalColumn>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <>\n\n              {index === 20 && (\n                <TableRow key=\"midhalf\">\n                  <CustomTableCell colSpan={11}>MIDHALF</CustomTableCell>\n                </TableRow>\n              )}\n              <TableRow key={row.id}>\n                {(index === 0 || index === 20) && (\n                  <CustomTableCell rowSpan={20} style={getGridStyle(row.grid)}>{row.grid}</CustomTableCell>\n                )}\n                \n                <CustomNewTableCell isActive={row.diode}\n                  onClick={() => toggleDiode(row.ru)} color=\"blue\"\n                >  </CustomNewTableCell>\n                {/*<CustomNewTableCell isActive={row.unmask}\n                  onClick={() => toggleUnmask(row.ru)}\n                >  </CustomNewTableCell> */}\n                <CustomNewTableCell isActive={activeUnmaskProduct === row.prod}\n                onClick={() => toggleUnmask(row.prod)} color=\"yellow\"\n                >  </CustomNewTableCell>\n                <CustomTableCell>{row.ru}</CustomTableCell>\n                \n                <CustomProdTableCell color={row.prodColor}>{row.prod}</CustomProdTableCell>\n                <CustomTableCell style={{ width: '13px' }}>{row.place} </CustomTableCell>\n            \n                <CustomProdTableCell color={row.prodColor2}>{row.prod2}</CustomProdTableCell>\n                \n                <CustomTableCell>{row.ru2}</CustomTableCell>\n                {/*<CustomNewTableCell isActive={row.unmask2}\n                  onClick={() => toggleUnmask2(row.ru2)}></CustomNewTableCell> */}\n                  <CustomNewTableCell isActive={activeUnmaskProduct === row.prod2}\n                onClick={() => toggleUnmask2(row.prod2)} color=\"yellow\"\n                >  </CustomNewTableCell>\n                <CustomNewTableCell isActive={row.diode2}\n                  onClick={() => toggleDiode2(row.ru2)} color=\"blue\"></CustomNewTableCell>\n                {(index === 0 || index === 20) && (\n                  <CustomTableCell rowSpan={20} style={getGridStyle(row.grid2)}>{row.grid2}</CustomTableCell>\n                )}\n               \n                \n              </TableRow>\n            </>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    <Box\n        sx={{\n          \n          width: '30px', // Adjust the width as needed\n          height: '602px', // Same height as the table\n          position: 'absolute',\n          right: '220px',\n          top: '65px',\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          border: 1,\n        }}\n      >\n        <Typography variant=\"h8\">I/Os</Typography>\n      </Box>\n\n      {/* Box attached to the bottom of the table */}\n      <Box\n        sx={{\n          \n          width: '628px', // Same width as the table\n          height: '0', // Adjust the height as needed\n          padding: '0',\n          textAlign: 'center',\n          marginLeft: '332px',\n          borderLeft: '1px solid black',\n          borderRight: '1px solid black',\n          borderBottom: '1px solid black', \n          \n        }}\n      >\n        <Typography variant=\"h8\">MISC Block</Typography>\n      </Box>\n    </Box>\n    \n    \n    \n  );\n};\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}